name: AdonisJs CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Adonis dependencies
        run: npm install
      - name: Install Vue dependencies
        run: cd ui && npm install --legacy-peer-deps
      - name: Setup database
        run: mkdir tmp && touch tmp/db.sqlite3
      - name: Run tests
        run: node -r @adonisjs/assembler/build/register japaFile.ts -ci
  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [16.x]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Adonis dependencies
        run: npm install
      - name: Install Vue dependencies
        run: cd ui && npm install --legacy-peer-deps
      - name: Install legacy peer dependencies
        run: npm install --legacy-peer-deps
      - name: Update version
        run: echo VERSION=$(node -p "require('./package.json').version") >> build.env
      - name: Build
        run: npm run build
      - name: Display version
        run: cat build.env
      - name: Set version
        run: export $(cat build.env | xargs)
      - name: Change directory
        run: cd build
      - name: Create container
        run: docker buildx create --name mybuilder --driver docker-container --bootstrap --use
      - name: Build an push container
        run: |
          echo ${{ secrets.TOKEN }} | docker login ghcr.io -u maximemrf --password-stdin
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 --push --file dockerfile-hd -t ghcr.io/maximemrf/hexa-data:${{ env.VERSION }} -t ghcr.io/maximemrf/hexa-data:latest .
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: maximemrf
      #     password: ${{ secrets.TOKEN }}
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./dockerfile-hd
      #     push: true
      #     tags: ghcr.io/maximemrf/hexa-data:latest